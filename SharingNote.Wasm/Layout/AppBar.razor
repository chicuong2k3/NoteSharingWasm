@inject NavigationManager navigationManager

<MudAppBar Elevation="0" Color="Color.Transparent">
    <MudHidden Breakpoint="Breakpoint.MdAndUp">
        <MudIconButton OnClick="HandleOnClick" Size="Size.Large"
                       Icon="@Icons.Material.Filled.Menu"
                       Color="Color.Inherit" />
    </MudHidden>
    <MudSpacer />

    <MudSpacer />

    <MudToggleIconButton Icon="@Icons.Material.Filled.LightMode"
                         Size="Size.Large"
                         ToggledSize="Size.Large"
                         Color="@Color.Warning"
                         ToggledIcon="@Icons.Material.Filled.DarkMode"
                         ToggledColor="@Color.Error"
                         Toggled="@IsDarkMode"
                         ToggledChanged="ToggleDarkMode"
                         Class="d-md-none" />

    <MudToggleIconButton Icon="@Icons.Material.Filled.LightMode"
                         Size="Size.Small"
                         ToggledSize="Size.Small"
                         Color="@Color.Warning"
                         ToggledIcon="@Icons.Material.Filled.DarkMode"
                         ToggledColor="@Color.Error"
                         Toggled="@IsDarkMode"
                         ToggledChanged="ToggleDarkMode"
                         Class="d-none d-md-inline" />
</MudAppBar>

@code {

    [Parameter]
    public EventCallback<bool> IsDarkModeChanged { get; set; }

    [Parameter]
    public EventCallback ToggleSidebar { get; set; }

    [Parameter]
    public bool IsDarkMode { get; set; }

    private async Task HandleOnClick()
    {
        await ToggleSidebar.InvokeAsync();
    }

    private async Task ToggleDarkMode(bool value)
    {
        await IsDarkModeChanged.InvokeAsync(value);
    }
}
