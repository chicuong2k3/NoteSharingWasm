@inject ISnackbar snackbar


<MudStack Spacing="2" Row="true" AlignItems="AlignItems.Start">
    <MudAvatar Size="Size.Medium" Class="mt-1">
        <MudImage Src="@UserAvatar" />
    </MudAvatar>

    <MudStack Style="width: 100%">
        <MudPaper Outlined="true" Elevation="0" Class="px-1 py-1">
            <MudStack Spacing="0">
                <div class="comment-input">
                    <MudTextField @bind-Value="CommentText"
                                  FullWidth="true"
                                  Immediate="true"
                                  Placeholder="@Placeholder"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense"
                                  Lines="@Lines"
                                  Class="py-0" />
                </div>

                <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Spacing="1">
                    <MudStack Row="true">
                        <!-- Emoji Button -->
                        <MudIconButton Icon="@Icons.Material.Filled.InsertEmoticon"
                                       OnClick="OpenEmojiPicker"
                                       Size="Size.Small" DropShadow="false"
                                       Color="Color.Primary" />

                        <!-- Image Upload -->
                        <MudFileUpload T="IBrowserFile"
                                       Accept=".jpg, .png, .gif"
                                       FilesChanged="UploadImage">
                            <ActivatorContent>
                                <MudIconButton Icon="@Icons.Material.Filled.Image"
                                               Size="Size.Small" DropShadow="false"
                                               Color="Color.Primary" />
                            </ActivatorContent>
                        </MudFileUpload>
                    </MudStack>

                    <MudIconButton Icon="@Icons.Material.Filled.Send"
                                   OnClick="SubmitComment" Variant="Variant.Text"
                                   Disabled="@string.IsNullOrWhiteSpace(CommentText)"
                                   Size="Size.Small" DropShadow="false" Ripple="false"
                                   Color="Color.Primary" />
                </MudStack>

            </MudStack>
        </MudPaper>


        <!-- Display selected image preview -->
        @if (!string.IsNullOrEmpty(SelectedImage))
        {
            <MudStack Row="true" AlignItems="AlignItems.Center" Class="mt-2">
                <MudImage Src="@SelectedImage" Width="100" />
                <MudIconButton Icon="@Icons.Material.Filled.Close"
                               Color="Color.Error"
                               OnClick="ClearImage"
                               Size="Size.Small" />
            </MudStack>
        }
    </MudStack>
</MudStack>



@if (ShowEmojiPicker)
{
}

@code {
    [Parameter, EditorRequired]
    public EventCallback<string> OnCommentSubmitted { get; set; }

    [Parameter, EditorRequired]

    public required string UserAvatar { get; set; }

    [Parameter]
    public string Placeholder { get; set; } = string.Empty;

    [Parameter]
    public int Lines { get; set; } = 3;

    string CommentText = string.Empty;
    string? SelectedImage;
    bool ShowEmojiPicker = false;

    private async Task SubmitComment()
    {
        if (!string.IsNullOrWhiteSpace(CommentText))
        {
            var comment = CommentText;
            if (!string.IsNullOrEmpty(SelectedImage))
            {
                comment = $"{comment} <div style='margin-top: 10px'><img src='{SelectedImage}' alt='Comment image' width='100' /></div>";
            }

            await OnCommentSubmitted.InvokeAsync(comment);
            CommentText = string.Empty;
            SelectedImage = null;
        }
        else
        {
            snackbar.Add("Có lỗi xảy ra.", Severity.Error);
        }
    }

    private void OpenEmojiPicker()
    {
        ShowEmojiPicker = !ShowEmojiPicker;
        snackbar.Add("Tính năng đang được phát triển", Severity.Info);
    }

    private void AddEmoji(string emoji)
    {
        CommentText += emoji;
        ShowEmojiPicker = false;
    }

    private void ClearImage()
    {
        SelectedImage = null;
    }

    private async Task UploadImage(IBrowserFile file)
    {
        try
        {
            SelectedImage = await ConvertToBase64Async(file);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            snackbar.Add("Image upload failed.", Severity.Error);
        }
    }

    private async Task<string> ConvertToBase64Async(IBrowserFile file)
    {
        using var stream = file.OpenReadStream(maxAllowedSize: 5 * 1024 * 1024);
        using var memoryStream = new MemoryStream();
        await stream.CopyToAsync(memoryStream);
        var bytes = memoryStream.ToArray();
        return $"data:{file.ContentType};base64,{Convert.ToBase64String(bytes)}";
    }
}